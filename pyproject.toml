[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61"]

[project]
authors = [
  {name = "ETH Zurich", email = "gridtools@cscs.ch"}
]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed"
]
dependencies = []
description = "JAX jit using DaCe (Data Centric Parallel Programming)"
name = "JaCe"
readme = "README.md"
requires-python = ">=3.10"
version = "0.1.0"
license.file = "LICENSE"

[project.urls]
"Bug Tracker" = "https://github.com/GridTools/JaCe/issues"
Changelog = "https://github.com/GridTools/JaCe/releases"
Discussions = "https://github.com/GridTools/JaCe/discussions"
Homepage = "https://github.com/GridTools/JaCe"

[tool.coverage]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:'
]
run.source = ["jace"]

[tool.mypy]
disallow_incomplete_defs = false
disallow_untyped_defs = false
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
files = ["src", "tests"]
python_version = "3.10"
strict = true
warn_unreachable = true
warn_unused_configs = true

[[tool.mypy.overrides]]
disallow_incomplete_defs = true
disallow_untyped_defs = true
module = "jace.*"

[tool.pytest.ini_options]
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
filterwarnings = [
  "error"
]
log_cli_level = "INFO"
minversion = "6.0"
testpaths = [
  "tests"
]
xfail_strict = true

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
  "B",  # flake8-bugbear
  "I",  # isort
  "ARG",  # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "EM",  # flake8-errmsg
  "ICN",  # flake8-import-conventions
  "G",  # flake8-logging-format
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "RET",  # flake8-return
  "RUF",  # Ruff-specific
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "UP",  # pyupgrade
  "YTT",  # flake8-2020
  "EXE",  # flake8-executable
  "NPY",  # NumPy specific rules
  "PD"  # pandas-vet
]
ignore = [
  "PLR09",  # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001"  # Conflicts with formatter
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["T20"]
"tests/**" = ["T20"]
